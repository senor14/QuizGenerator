/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.57
 * Generated at: 2020-12-06 13:36:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class UserRegForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>회원가입 화면</title>\n");
      out.write("<style type=\"text/css\">\n");
      out.write("<style type=\"text/css\">\n");
      out.write("*{\n");
      out.write("  box-sizing:border-box;\n");
      out.write("  margin:0;\n");
      out.write("  padding:0;\n");
      out.write("}\n");
      out.write("body{\n");
      out.write("  font-family: Arial;\n");
      out.write("  position:relative;\n");
      out.write("  background: #272727;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".contain{\n");
      out.write("  positon:relative;\n");
      out.write("  width:100%;\n");
      out.write("  height:100vh;\n");
      out.write("  text-align: center;\n");
      out.write("}\n");
      out.write("h1{\n");
      out.write("  font-size:40px;\n");
      out.write("  color:aliceblue;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".inputs{\n");
      out.write("  text-align:center;\n");
      out.write("  position:absolute;\n");
      out.write("  top:50%;\n");
      out.write("  width:450px;\n");
      out.write("  color:aliceblue;\n");
      out.write("  padding:50px;\n");
      out.write("  height:auto;\n");
      out.write("  left:50%;\n");
      out.write("  transform:translate(-50%,-50%);\n");
      out.write("}\n");
      out.write("\n");
      out.write(".input{\n");
      out.write("  width:100%;\n");
      out.write("  margin: 15px 0;\n");
      out.write("  outline: none;\n");
      out.write("  padding: 15px 12px;\n");
      out.write("  color:aliceblue;\n");
      out.write("  border:none;\n");
      out.write("  border-radius:20px;\n");
      out.write("  box-shadow: 5px 5px 10px rgba(0,0,0,0.7) ,-5px -5px 10px rgba(255,255,255,0.1);\n");
      out.write("  background:transparent;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".input:focus{\n");
      out.write("    box-shadow: inset 5px 5px 10px rgba(0,0,0,0.7) , inset -5px -5px 10px rgba(255,255,255,0.1);\n");
      out.write("}\n");
      out.write("\n");
      out.write(".go{\n");
      out.write("  text-align:center;\n");
      out.write("  outline:none;\n");
      out.write("  text-decoration:none;\n");
      out.write("  margin-top:10px;\n");
      out.write("  color:aliceblue;\n");
      out.write("  background:transparent;\n");
      out.write("  width:80px;\n");
      out.write("  border:none;\n");
      out.write("  height:80px;\n");
      out.write("  border-radius:50%;\n");
      out.write("  margin-left: 20px;\n");
      out.write(" box-shadow: 5px 5px 10px rgba(0,0,0,0.7) ,-5px -5px 10px rgba(255,255,255,0.1); \n");
      out.write("}\n");
      out.write("\n");
      out.write(".go:focus{\n");
      out.write("      box-shadow: inset 5px 5px 10px rgba(0,0,0,0.7) , inset -5px -5px 10px rgba(255,255,255,0.1);\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("    // 이메일 인증 서비스 만들기\n");
      out.write("\t// 회원가입 유효성 체크 \n");
      out.write("\tfunction doRegUserCheck(f) {\n");
      out.write("\n");
      out.write("\t\tif (f.user_name.value == \"\") {\n");
      out.write("\t\t\talert(\"이름을 입력하세요.\");\n");
      out.write("\t\t\tf.user_name.focus();\n");
      out.write("\t\t\treturn false;\n");
      out.write("\t\t}\n");
      out.write("\n");
      out.write("\t\tif (f.password.value == \"\") {\n");
      out.write("\t\t\talert(\"비밀번호을 입력하세요.\");\n");
      out.write("\t\t\tf.password.focus();\n");
      out.write("\t\t\treturn false;\n");
      out.write("\t\t}\n");
      out.write("\n");
      out.write("\t\tif (f.password2.value == \"\") {\n");
      out.write("\t\t\talert(\"비밀번호확인 입력하세요.\");\n");
      out.write("\t\t\tf.password2.focus();\n");
      out.write("\t\t\treturn false;\n");
      out.write("\t\t}\n");
      out.write("\n");
      out.write("\t\tif (f.email.value == \"\") {\n");
      out.write("\t\t\talert(\"이메일을 입력하세요.\");\n");
      out.write("\t\t\tf.email.focus();\n");
      out.write("\t\t\treturn false;\n");
      out.write("\t\t}\n");
      out.write("\n");
      out.write("\t\tif (f.sex.value == \"\") {\n");
      out.write("\t\t\talert(\"성별을 입력하세요.\");\n");
      out.write("\t\t\tf.sex.focus();\n");
      out.write("\t\t\treturn false;\n");
      out.write("\t\t}\n");
      out.write("\n");
      out.write("\t\tif (f.user_an.value == \"\") {\n");
      out.write("\t\t\talert(\"닉네임 입력하세요.\");\n");
      out.write("\t\t\tf.user_an.focus();\n");
      out.write("\t\t\treturn false;\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("     // <!-- 이메일 전송을 위한 함수-->\n");
      out.write("\tfunction emailCheckProc() {\n");
      out.write("\t\tvar emailCheck = document.getElementById(\"email\").value;\n");
      out.write("\t\tif(emailCheck == \"\"){\n");
      out.write("\t\t\talert(\"이메일을 입력해주세요\");\n");
      out.write("\t\t\temail.focus();\n");
      out.write("\t\t\treturn false;\n");
      out.write("\t\t}else{\n");
      out.write("\t\tconsole.log(emailCheck);\n");
      out.write("\t\talert(\"이메일발송이 완료되었습니다.\");\n");
      out.write("\t\tlocation.href=\"/user/createEmailCheck.do\"\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("\t<div class=\"contain\">\n");
      out.write("\t\t<div class=\"inputs\">\n");
      out.write("\t\t\t<h1>QUIZ GENERATOR 가입</h1>\n");
      out.write("\n");
      out.write("\t\t\t<form name=\"f\" method=\"post\" action=\"insertMember.do\" onsubmit=\"return doRegUserCheck(this);\">\n");
      out.write("\t\t\t\t<label>이름 </label> <input type=\"text\" placeholder=\"이름\" class=\"input\" name=\"user_name\"> \n");
      out.write("\t\t\t\t<label>아이디 </label> <input type=\"text\" placeholder=\"아이디\" class=\"input\" name=\"user_id\"> \n");
      out.write("\t\t\t\t<label>비밀번호</label> <input type=\"password\" placeholder=\"비밀번호\" class=\"input\" name=\"password\">\n");
      out.write("\t\t\t\t<label>비밀번호 확인</label> <input type=\"password\" placeholder=\"비밀번호 확인\" class=\"input\" name=\"password2\">\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t<div>\n");
      out.write("\t\t\t\t\t<label>이메일</label><input type=\"email\" placeholder=\"이메일\"\n");
      out.write("\t\t\t\t\t\tclass=\"input\" name=\"password\">\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\" \" id=\"emailCheck\"\n");
      out.write("\t\t\t\t\t\tonclick=\"emailCheckProc();\">인증문자발송</button>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<br>\n");
      out.write("\t\t\t\t<div>\n");
      out.write("\t\t\t\t\t<label>인증번호 확인</label> <input type=\"email\" placeholder=\"인증번호\"\n");
      out.write("\t\t\t\t\t\tclass=\"input\" name=\"인증\">\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"login100-form-btn\" id=\"emailAuth\">\n");
      out.write("\t\t\t\t\t\t이메일 인증</button>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<br> <input type=\"hidden\" path=\"random\" id=\"radom\"\n");
      out.write("\t\t\t\t\tvalue=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${random }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\n");
      out.write("\n");
      out.write("\t\t\t\t<div class=\"container-login100-form-btn p-t-10\">\n");
      out.write("\t\t\t\t\t<button type=\"submit\" class=\"login100-form-btn\">완료</button>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</form>\n");
      out.write("\t\t\t<br>\n");
      out.write("\t\t\t<div class=\"container-login100-form-btn p-t-10\">\n");
      out.write("\t\t\t\t<a href=\"/Login.do\" class=\"login100-form-btn\"> <!-- href 앞에 /와 끝에 .do를 붙혀라 -->\n");
      out.write("\t\t\t\t\t취소\n");
      out.write("\t\t\t\t</a>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
