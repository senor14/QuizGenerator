/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.57
 * Generated at: 2020-12-07 02:23:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.main;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class StudyGame_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("    \n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>단어, 필답 연습</title>\n");
      out.write(" <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n");
      out.write("    <link type=\"text/css\" rel=\"stylesheet\" href=\"/css/style.css\" />\n");
      out.write("    <link type=\"text/css\" rel=\"stylesheet\" href=\"/css/style2.css\" />\n");
      out.write("    <link\n");
      out.write("      href=\"https://fonts.googleapis.com/css?family=Oswald:400,700&display=swap\"\n");
      out.write("      rel=\"stylesheet\"\n");
      out.write("    />\n");
      out.write("    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" />\n");
      out.write("    <link\n");
      out.write("      href=\"https://fonts.googleapis.com/css2?family=Black+Han+Sans&display=swap\"\n");
      out.write("      rel=\"stylesheet\"\n");
      out.write("    />\n");
      out.write("    <link\n");
      out.write("      type=\"text/css\"\n");
      out.write("      href=\"https://netdna.bootstrapcdn.com/twitter-bootstrap/2.3.2/css/bootstrap-combined.min.css\"\n");
      out.write("      rel=\"stylesheet\"\n");
      out.write("    />\n");
      out.write("<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\">\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\"></script>\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js\"></script>\n");
      out.write("<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js\"></script>\n");
      out.write("\n");
      out.write(" <style>\n");
      out.write("    body {\n");
      out.write("\tbackground: #ddd;\n");
      out.write("}\n");
      out.write("\n");
      out.write("body, input[type=text], input[type=password], button {\n");
      out.write("\tmargin: 0;\n");
      out.write("\tfont-size: 16px;\n");
      out.write("\tfont-family: sans-serif;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#panels, #panels > div {\n");
      out.write("\tposition: absolute;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#panels {\n");
      out.write("\tmax-width: 800px;\n");
      out.write("\tmargin: auto;\n");
      out.write("\tbox-shadow: 0 0 50px rgba(0,0,0,0.3);\n");
      out.write("\tbackground: #efefef;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#panels > div {\n");
      out.write("\tleft: 0;\n");
      out.write("\tright: 0;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#panels {\n");
      out.write("\ttop: 0;\n");
      out.write("\tleft: 0;\n");
      out.write("\tright: 0;\n");
      out.write("\tbottom: 0;\n");
      out.write("\toverflow: hidden;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#panels .topbar {\n");
      out.write("\ttop: 0;\n");
      out.write("\tcolor: white;\n");
      out.write("\tbackground-color: #5991B1;\n");
      out.write("\tz-index: 3;\n");
      out.write("\tcursor: default;\n");
      out.write("\theight: 37px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#panels .topbar.night {\n");
      out.write("\tbackground-color: #48569E;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#panels .topbar.night.fall {\n");
      out.write("\theight: 100%;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#panels .topbar .itsnight {\n");
      out.write("\tposition: absolute;\n");
      out.write("\ttop: 100%;\n");
      out.write("\tleft: 0;\n");
      out.write("\tright: 0;\n");
      out.write("\ttext-align: center;\n");
      out.write("\topacity: 0;\n");
      out.write("\tdisplay: none;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#panels .topbar.night.fall .itsnight {\n");
      out.write("\tdisplay: block;\n");
      out.write("\topacity: 0.8;\n");
      out.write("\ttop: 50%;\n");
      out.write("\ttransform: translateY(-50%);\n");
      out.write("}\n");
      out.write("\n");
      out.write("#panels .topbar .itsnight i {\n");
      out.write("\tfont-size: 3em;\n");
      out.write("\tdisplay: block;\n");
      out.write("\tmargin-bottom: 10px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#panels .topbar .status {\n");
      out.write("\tpadding: 10px;\n");
      out.write("\theight: 16px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#panels .topbar .time {\n");
      out.write("\topacity: 0.6;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#panels .topbar .controls {\n");
      out.write("\tfloat: right;\n");
      out.write("\tfont-size: 0;\n");
      out.write("\tmargin-right: 10px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#panels .topbar .controls button {\n");
      out.write("\tpadding: 10px;\n");
      out.write("\tfont-size: 14px;\n");
      out.write("\tborder: 0;\n");
      out.write("\theight: 37px;\n");
      out.write("\tmargin: 0;\n");
      out.write("\tmargin-left: 2px;\n");
      out.write("\tbackground: none;\n");
      out.write("\tcolor: white;\n");
      out.write("\toutline: none;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#panels .players,\n");
      out.write("#panels .chatlog {\n");
      out.write("\ttop: 0;\n");
      out.write("\tbottom: 0;\n");
      out.write("\tpadding: 46px 10px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#panels .players > div,\n");
      out.write("#panels .players > div .bubble,\n");
      out.write("#panels .topbar,\n");
      out.write("#panels .players,\n");
      out.write("#panels .chatlog,\n");
      out.write("#panels .topbar .itsnight {\n");
      out.write("\ttransition: all 0.3s ease-in-out;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#panels .players > div {\n");
      out.write("\toverflow: hidden;\n");
      out.write("\tposition: absolute;\n");
      out.write("\tborder: 1px solid transparent;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#panels .players > div .selection {\n");
      out.write("\tdisplay: none;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#panels .players.selectable > div {\n");
      out.write("\tpadding: 10px 15px;\n");
      out.write("\tborder-color: rgba(0,0,0,0.3);\n");
      out.write("\tborder-radius: 3px;\n");
      out.write("\tcursor: pointer;\n");
      out.write("\tbox-sizing: border-box;\n");
      out.write("\tbackground: white;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#panels .players.selectable > div:hover {\n");
      out.write("\tbackground: none;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#panels .players.selectable > div.selected {\n");
      out.write("\tcolor: white;\n");
      out.write("\tbackground: red;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#panels .players.selectable > div .bubble {\n");
      out.write("\tfont-size: 0;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#panels .players.selectable > div .selection {\n");
      out.write("\tdisplay: inline;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#panels .chatlog {\n");
      out.write("\tleft: auto;\n");
      out.write("\tright: -310px;\n");
      out.write("\twidth: 280px;\n");
      out.write("\tborder-left: 1px solid rgba(0,0,0,0.3);\n");
      out.write("\tbox-shadow: 0 0 30px rgba(0,0,0,0.4), 0 0 0 9999px rgba(0,0,0,0.1);\n");
      out.write("\topacity: 0;\n");
      out.write("\tbackground: #eee;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#panels .chatlog.show {\n");
      out.write("\ttransform: translateX(-310px);\n");
      out.write("\topacity: 1;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#panels .chatlog .server {\n");
      out.write("\tfont-size: 0.8em;\n");
      out.write("\ttext-align: center;\n");
      out.write("\tcolor: #b70000;\n");
      out.write("\tmargin: 5px 0;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#panels .action {\n");
      out.write("\tbottom: 0;\n");
      out.write("\tborder-top: 1px solid rgba(0,0,0,0.3);\n");
      out.write("\tz-index: 4;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#panels .action input,\n");
      out.write("#panels .action button,\n");
      out.write("#panels .action .disabled {\n");
      out.write("\tpadding: 10px;\n");
      out.write("\tborder: 0;\n");
      out.write("\tdisplay: block;\n");
      out.write("\tbox-sizing: border-box;\n");
      out.write("\toutline: none;\n");
      out.write("\theight: 36px;\n");
      out.write("\tbackground: white;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#panels .action input {\n");
      out.write("\twidth: 100%;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#panels .action button {\n");
      out.write("\tposition: absolute;\n");
      out.write("\tright: 0;\n");
      out.write("\ttop: 0;\n");
      out.write("\tbackground: none;\n");
      out.write("\tpadding: 10px 16px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#panels .action .choose button {\n");
      out.write("\tposition: static;\n");
      out.write("\twidth: 100%;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#panels .action .disabled {\n");
      out.write("\ttext-align: center;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#panels .action .choose,\n");
      out.write("#panels .action .disabled {\n");
      out.write("\tdisplay: none;\n");
      out.write("}\n");
      out.write("        #info{background-color: black; left; margin-left: 50px; font-size : 30px;}\n");
      out.write("        #inputContents{text-align: center; border-top-style: solid; border-top-color: black; padding-top: 5px;}\n");
      out.write("        #contents{width: 1200px; height: 800px; margin: 0 auto;}\n");
      out.write("        #tajaContents{width:100%; height: 95%; position: relative}\n");
      out.write("        #inputText{display:inline-block}\n");
      out.write("        #inputBtn{display:inline-block;}\n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<div id=\"content\">\n");
      out.write("      <div class=\"navbar navbar-fixed-top\">\n");
      out.write("        <nav class=\"navbar-inner header\">\n");
      out.write("          <div class=\"container\">\n");
      out.write("<a href=\"/main/mainPage.do\">\n");
      out.write("            <div class=\"brand\" style=\"color : #f89406\">QUIZ GENERATOR</div>\n");
      out.write("            </a>\n");
      out.write("            <ul class=\"nav pull-right\">\n");
      out.write("              <li>\n");
      out.write("                <a class=\"nav-link\" href=\"/main/MyPage.do\"> MYPAGE </a>\n");
      out.write("              </li>\n");
      out.write("              <li>\n");
      out.write("                <a class=\"nav-link\"> BOARD </a>\n");
      out.write("              </li>\n");
      out.write("            </ul>\n");
      out.write("            <div class=\"triangle-down center\">\n");
      out.write("              <p>\n");
      out.write("                <i id=\"toggle\" class=\"fa fa-chevron-down fa-2x isDown\"></i>\n");
      out.write("              </p>\n");
      out.write("            </div>\n");
      out.write("          </div>\n");
      out.write("        </nav>\n");
      out.write("        <br />\n");
      out.write("      </div>\n");
      out.write("\n");
      out.write("<!-- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@점수랑 오타수 화면에 뜨는 부분@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@-->\n");
      out.write("    <div id=\"info\">\n");
      out.write("        <div id=\"score\" class=\"btn btn-success\"></div>\n");
      out.write("        <div id=\"life\" class=\"btn btn-success\"></div>\n");
      out.write("    </div>\n");
      out.write("    \n");
      out.write("    <div id=\"contents\">\n");
      out.write("        <!-- 밑에 있는 tajaContents Div 안에 답을 적어주는 거임-->\n");
      out.write("        <div id=\"tajaContents\"></div>\n");
      out.write("        <div id=\"inputContents\">\n");
      out.write("            <div id=\"inputText\">\n");
      out.write("                <input type=\"text\" id=\"tajaText\" class=\"btn btn-success\">\n");
      out.write("            </div>\n");
      out.write("            <div id=\"inputBtn\">\n");
      out.write("                <button id=\"tajaBtn\" class=\"btn btn-success\">문제시작</button>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write(" <script>\n");
      out.write("    // ########################내려오게 할 단어의 목록을 배열로 선언 차후 문제 지문과 답 매핑하기 ###########################\n");
      out.write("var taja = [\"하둡에서 파일을 업로드하는 명령어는? \", \"강서캠 위치는?\", \"봄이랑 같은 이름의 프레임워크\", \"학생회장이름은?\"];\n");
      out.write("     // 실제 입력되는 답안과 비교해서 맞으면 taja와 같은 인자값에 있는 값이 화면에서 사라짐 ##### \n");
      out.write("var dap = [\"-put\", \"우장산\", \"스프링\", \"양원석\"];\n");
      out.write("\n");
      out.write("\n");
      out.write("// 밑에 선언한 tajaContents 안에 글자로 된 Div 들어감\n");
      out.write("var tajaContents = document.getElementById(\"tajaContents\");\n");
      out.write("\n");
      out.write("// tajaDiv를 다루기 위한 배열\n");
      out.write("var newObj = [];\n");
      out.write("\n");
      out.write("// taja의 각 글자마다 top을 주기위한 배열 초기화 (글자를 내려오게 하기 위해 style 의 top을 이용\n");
      out.write("var plusTop = new Array(taja.length);\n");
      out.write("for (let i = 0; i < plusTop.length; i++) {\n");
      out.write("    plusTop[i] = 0;\n");
      out.write("}\n");
      out.write("\n");
      out.write("// 글자의 div 크기를 고정해놓음 크기 수정(글자 크기 수정)\n");
      out.write("const TAJAWIDTH = 100;\n");
      out.write("const TAJAHEIGHT = 30;\n");
      out.write("\n");
      out.write("// 그려지는 것 보다 내려오는게 간격이 더 짧게 함( setInterval의 시간 변수) 차후 옵션으로 수정가능하게 하기\n");
      out.write("const DRAWTIME = 1000;\n");
      out.write("const DOWNTIME = 600;\n");
      out.write("\n");
      out.write("// 생명 변수\n");
      out.write("var life = 0;\n");
      out.write("var lifeDiv = document.getElementById(\"life\");\n");
      out.write("lifeDiv.innerHTML = \"틀린 문제 수 : \" + life;\n");
      out.write("\n");
      out.write("// 점수 변수\n");
      out.write("var score = 0;\n");
      out.write("var scoreDiv = document.getElementById(\"score\");\n");
      out.write("scoreDiv.innerHTML = \"정답 수 : \" + score;\n");
      out.write("\n");
      out.write("// taja배열의 index 값에 대한 변수\n");
      out.write("var idx = 0;\n");
      out.write("\n");
      out.write("// 화면에 글자를 뿌려주기 위한 메서드\n");
      out.write("function drawTaja() {\n");
      out.write("    var randomPick = 0;\n");
      out.write("    var temp = null;\n");
      out.write("\n");
      out.write("    /* 랜덤으로 taja배열을 섞어줄 때 사용 $$$$ 질문과 답의 인자값 같게 해주려고 미사용\n");
      out.write("    for (let i = 0; i < taja.length; i++) {\n");
      out.write("        randomPick = Math.round(Math.random() * (taja.length - 1));\n");
      out.write("        temp = taja[randomPick];\n");
      out.write("        taja[randomPick] = taja[i];\n");
      out.write("        taja[i] = temp;\n");
      out.write("    } */\n");
      out.write("\n");
      out.write("   // 일정한 간격으로 화면에 단어를 하나씩 뿌려주기 위한 setInteval 메서드 \n");
      out.write("    var drawInterval = setInterval(function () {\n");
      out.write("\n");
      out.write("        var leftWidth = Math.round(Math.random() * 1200);\n");
      out.write("        var tajaDiv = document.createElement(\"div\");\n");
      out.write("        tajaDiv.classList.add(\"tajaWord\");\n");
      out.write("        tajaDiv.style.width = TAJAWIDTH + \"px\";\n");
      out.write("        tajaDiv.style.height = TAJAHEIGHT + \"px\";\n");
      out.write("        tajaDiv.style.position = \"absolute\";\n");
      out.write("        tajaDiv.style.textAlign = \"center\";\n");
      out.write("        tajaDiv.innerHTML = taja[idx++];\n");
      out.write("        tajaContents.appendChild(tajaDiv);\n");
      out.write("        // leftWidth 변수가 0 < leftWidth < 1200 으로 설정되어있기 때문에\n");
      out.write("        // 글자의 width값 까지 더하게 되면 tajaContents의 범위를 넘어갈 수 있습니다.\n");
      out.write("        // 그래서 그 범위를 넘어가게 되면 안넘어가게 하기 위한 재설정해주는 부분입니다.\n");
      out.write("        if (leftWidth + TAJAWIDTH >= tajaContents.offsetWidth) {\n");
      out.write("            tajaDiv.style.left = (leftWidth - TAJAWIDTH) + \"px\";\n");
      out.write("        } else {\n");
      out.write("            tajaDiv.style.left = leftWidth + \"px\";\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        // 각각의 tajaDiv를 다루기 위해 newObj 배열에 담는다.\n");
      out.write("        newObj.push(tajaDiv);\n");
      out.write("\n");
      out.write("        // 화면에 글자가 다 뿌려지면 더 이상 글자를 뿌려주기 위한\n");
      out.write("        // setInterval() 을 중지시킨다. ( 그렇지 않으면 글자가 다 뿌려진 이후에도 계속 동작하게 됩니다.)\n");
      out.write("        if (newObj.length === taja.length) {\n");
      out.write("            clearInterval(drawInterval);\n");
      out.write("        }\n");
      out.write("    }, DRAWTIME);\n");
      out.write("}\n");
      out.write("    </script>\n");
      out.write("    <script>\n");
      out.write("    // 글자를 내려주기 위한 메서드\n");
      out.write("function downTaja() {\n");
      out.write("    //글자가 뿌려진 이후에는 일정한 간격으로 글자를 내려줘야 함\n");
      out.write("    setInterval(function () {\n");
      out.write("    \tvar totalCount = taja.length;\n");
      out.write("    \t// 총 문제수에서 40프로 이상 틀리면 죽는 것으로 설정함\n");
      out.write("    \tvar lifeCount = Math.round(taja.length * 0.4);\n");
      out.write("        for (let i = 0; i < taja.length; i++) {\n");
      out.write("            if (i < newObj.length) {\n");
      out.write("                newObj[i].style.top = plusTop[i] + \"px\";\n");
      out.write("                // 글자의 범위가 경계(바닥) 바깥으로 나갔을 경우 제거\n");
      out.write("                if (plusTop[i] + TAJAHEIGHT >= tajaContents.offsetHeight) {\n");
      out.write("                    if (tajaContents.contains(newObj[i])) {\n");
      out.write("                        tajaContents.removeChild(newObj[i]);\n");
      out.write("                        life++;\n");
      out.write("                        lifeDiv.innerHTML = \"틀린 수 : \" + life;\n");
      out.write("\n");
      out.write("                        // 목숨을 모두 잃었을 때 - 실패\n");
      out.write("                        if (life === lifeCount) {\n");
      out.write("                            alert('총' + totalCount + '문제 중에서'+ lifeCount + '개를  틀려 불합격 입니다.');\n");
      out.write("                            alert('총 ' + score + '점을 획득! 합격!');\n");
      out.write("                            location.reload();\n");
      out.write("                        }\n");
      out.write("\n");
      out.write("                        // life가 남은상태로 게임이 끝났을 경우 - 성공\n");
      out.write("                        if (newObj.length === taja.length) { // 화면에 단어가 다 뿌려진 이후\n");
      out.write("                            if (!tajaContents.hasChildNodes()) { // 뿌려진 단어가 화면에 존재하지 않을 경우\n");
      out.write("                                alert('다음 단계로 이동합니다.(준비중)');\n");
      out.write("                                alert('총 ' + score + '점을 획득하였습니다.');\n");
      out.write("                                location.reload();\n");
      out.write("                            }\n");
      out.write("                        }\n");
      out.write("\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("                plusTop[i] += 30;\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("    }, DOWNTIME);\n");
      out.write("\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("var tajaText = document.getElementById(\"tajaText\");\n");
      out.write("tajaText.addEventListener(\"keydown\", function (e) {\n");
      out.write("    // enter 눌렀을 때\n");
      out.write("    if (e.keyCode === 13) {\n");
      out.write("        for (let i = 0; i < newObj.length; i++) {\n");
      out.write("            // 타자 친 단어와 배열에 저장된 값이 일치하면 동일한 인자갑을 가진 화면의 배열 값 삭제 \n");
      out.write("            if (tajaText.value === dap[i]) {\n");
      out.write("                tajaContents.removeChild(newObj[i]);\n");
      out.write("                score += 1;\n");
      out.write("                scoreDiv.innerHTML = \"SCORE : \" + score;\n");
      out.write("\n");
      out.write("                // 더이상 화면에 뿌려질 단어가 없고\n");
      out.write("                // life를 다 소진하지않고 clear 했을 경우\n");
      out.write("                if (newObj.length === taja.length) {\n");
      out.write("                    if (!tajaContents.hasChildNodes()) {\n");
      out.write("                        alert('다음 단계로 이동합니다.(준비중)');\n");
      out.write("                        alert('총 ' + score + '점을 획득하였습니다.');\n");
      out.write("                        location.reload();\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                }\n");
      out.write("\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("        // enter 눌렀을 때 input 창 초기화\n");
      out.write("        tajaText.value = \"\";\n");
      out.write("    }\n");
      out.write("});\n");
      out.write("\n");
      out.write("// 클릭 횟수에 대한 변수\n");
      out.write("var count = 0;\n");
      out.write("\n");
      out.write("// 시작하기\n");
      out.write("var tajaBtn = document.getElementById(\"tajaBtn\");\n");
      out.write("tajaBtn.addEventListener(\"click\", function () {\n");
      out.write("    // 버튼을 눌렀을 때마다 메서드가 실행되므로 최초 1회만 실행되도록 count변수로 막음 ==\n");
      out.write("    if (count === 0) {\n");
      out.write("        drawTaja();\n");
      out.write("        downTaja();\n");
      out.write("    }\n");
      out.write("    count++;\n");
      out.write("});\n");
      out.write("    </script>\n");
      out.write("    <script type=\"text/javascript\"\n");
      out.write("\tsrc=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\n");
      out.write("\n");
      out.write("    <script\n");
      out.write("      src=\"https://cdnjs.cloudflare.com/ajax/libs/animejs/2.2.0/anime.min.js\"\n");
      out.write("      type=\"text/javascript\"\n");
      out.write("    ></script>\n");
      out.write("    <script\n");
      out.write("      src=\"https://www.curtainsjs.com/build/curtains.min.js\"\n");
      out.write("      type=\"text/javascript\"\n");
      out.write("    ></script>\n");
      out.write("    <script src=\"/js/script.js\" type=\"text/javascript\"></script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
