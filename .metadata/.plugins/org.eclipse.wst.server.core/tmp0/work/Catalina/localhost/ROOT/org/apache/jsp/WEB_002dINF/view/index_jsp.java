/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.57
 * Generated at: 2020-11-17 10:56:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("    <meta name=\"description\" content=\"\">\n");
      out.write("    <meta name=\"author\" content=\"\">\n");
      out.write("\t\n");
      out.write("\t<link type=\"text/css\" rel=\"stylesheet\" href=\"http://jcrop-cdn.tapmodo.com/v0.9.12/css/jquery.Jcrop.min.css\"/>\n");
      out.write("\t<style type=\"text/css\">\n");
      out.write("    .imgArea { text-align:center; }\n");
      out.write("    canvas, #uploadFile, #editBtn, #cutBtn, #canBtn { display:none; }\n");
      out.write("    body { overflow:auto; };\n");
      out.write("\t</style>\n");
      out.write("\n");
      out.write("    <title>문제 작업장</title>\n");
      out.write("\n");
      out.write("    <!-- Bootstrap Core CSS -->\n");
      out.write("    <link type=\"text/css\" rel=\"stylesheet\" href=\"../../css/bootstrap.min.css\"  >\n");
      out.write("\n");
      out.write("    <!-- Custom CSS -->\n");
      out.write("    <link type=\"text/css\" rel=\"stylesheet\" href=\"../../css/grayscale.css\"  >\n");
      out.write("\n");
      out.write("    <!-- Custom Fonts -->\n");
      out.write("    <link type=\"text/css\" href=\"../../font-awesome/css/font-awesome.min.css\" rel=\"stylesheet\" >\n");
      out.write("    <link type=\"text/css\" href=\"http://fonts.googleapis.com/css?family=Lora:400,700,400italic,700italic\" rel=\"stylesheet\" >\n");
      out.write("    <link type=\"text/css\" href=\"http://fonts.googleapis.com/css?family=Montserrat:400,700\" rel=\"stylesheet\">\n");
      out.write("\n");
      out.write("    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n");
      out.write("    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n");
      out.write("    <!--[if lt IE 9]>\n");
      out.write("        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n");
      out.write("        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n");
      out.write("    <![endif]-->\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\" src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"http://jcrop-cdn.tapmodo.com/v0.9.12/js/jquery.Jcrop.min.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"../../js/pixelate.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"../../js/html2canvas.js\"></script>\n");
      out.write("<!-- jQuery -->\n");
      out.write("<!--  <script type=\"text/javascript\" src=\"../../js/jquery.js\"></script>-->\n");
      out.write("<!-- Bootstrap Core JavaScript -->\n");
      out.write("<script type=\"text/javascript\" src=\"../../js/bootstrap.min.js\"></script>\n");
      out.write("<!-- Plugin JavaScript -->\n");
      out.write("<script type=\"text/javascript\" src=\"../../js/jquery.easing.min.js\"></script>\n");
      out.write("<!-- Custom Theme JavaScript -->\n");
      out.write("<script type=\"text/javascript\" src=\"../../js/grayscale.js\"></script>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\n");
      out.write("    let jcropApi = null;\n");
      out.write("\tlet cnt = 0;\n");
      out.write("\n");
      out.write("    // @breif 이미지 크롭 영역지정 UI 나타내기\n");
      out.write("    function imgCropDesignate() {\n");
      out.write("\n");
      out.write("        let editWidth = $(\"#editImg\").width();\n");
      out.write("        let editHeight = $(\"#editImg\").height();\n");
      out.write("\n");
      out.write("        // @breif jcrop 실행시 크롭영역을 미리 세팅\n");
      out.write("        let x1 = window.screen.width / 2 - editWidth;\n");
      out.write("        let y1 = window.screen.height / 2 - editHeight;\n");
      out.write("        let x2 = editWidth / 1.5;\n");
      out.write("        let y2 = editHeight / 1.5;\n");
      out.write("\n");
      out.write("        // @breif jcrop 실행\n");
      out.write("        $(\"#editImg\").Jcrop({\n");
      out.write("              bgFade : true\n");
      out.write("            , bgOpacity : .2\n");
      out.write("            , setSelect : [ x1, y1, x2, y2 ]\n");
      out.write("            , onSelect : updateCoords\n");
      out.write("        }, function() {\n");
      out.write("            jcropApi = this;\n");
      out.write("\n");
      out.write("        });\n");
      out.write("\n");
      out.write("        $(\"#editBtn\").css(\"display\", \"none\");\n");
      out.write("        $(\"#cutBtn\").css(\"display\", \"inline\");\n");
      out.write("        $(\"#canBtn\").css(\"display\", \"inline\");\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    // @breif 지정된 크롭 한 영역( 좌표, 넓이, 높이 )의 값을 보관하는 함수\n");
      out.write("    function updateCoords(crap) {\n");
      out.write("        $(\"#xAxis\").val(crap.x);\n");
      out.write("        $(\"#yAxis\").val(crap.y);\n");
      out.write("        $(\"#wLength\").val(crap.w);\n");
      out.write("        $(\"#hLength\").val(crap.h);\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    // @breif 크롭한 영역 잘라내고 추출하기\n");
      out.write("    function imgCropApply() {\n");
      out.write("    \tif (cnt == 0) $(\".btn\").css(\"width\",\"50%\");\n");
      out.write("    \telse $(\".btn\").css(\"width\", \"10%\");\n");
      out.write("        if(parseInt($(\"#wLength\").val()) == \"NaN\") {\n");
      out.write("            alert(\"이미지를 크롭한 이후\\n자르기 버튼을 클릭하세요.\");\n");
      out.write("            return false;\n");
      out.write("\n");
      out.write("        } else {\n");
      out.write("\n");
      out.write("\t\t\tlet crop_img = \"#editImg\"+cnt;\n");
      out.write("\t\t\tlet edit_img = \"#editImg\";\n");
      out.write("\t\t\tlet crop_img_sel = document.querySelector(\".crop_img\");\n");
      out.write("\t\t\t//let imgArea_sel = document.querySelector(\".imgArea\");\n");
      out.write("\t\t\tlet new_img = document.createElement(\"img\");\n");
      out.write("\t\t\t//imgArea_sel.appendChild(new_img);\n");
      out.write("\t\t\tcrop_img_sel.appendChild(new_img);\n");
      out.write("\t\t\tnew_img.setAttribute(\"id\",crop_img);\n");
      out.write("\t\t\t\n");
      out.write("            let editImage = new Image();\n");
      out.write("            editImage.src = $(\"#editImg\").attr(\"src\");\n");
      out.write("\n");
      out.write("            editImage.onload = function() {\n");
      out.write("\n");
      out.write("                // @breif 캔버스 위에 이미지 그리기\n");
      out.write("                let canvas = document.querySelector(\"canvas\");\n");
      out.write("                let canvasContext = canvas.getContext(\"2d\");\n");
      out.write("                \n");
      out.write("                // @breif 캔버스 크기를 이미지 크기와 동일하게 지정\n");
      out.write("                canvas.width = $(\"#wLength\").val();\n");
      out.write("                canvas.height = $(\"#hLength\").val();\n");
      out.write("                canvasContext.drawImage(\n");
      out.write("                      this\n");
      out.write("                    , $(\"#xAxis\").val()      // 자르기를 시작할 x좌표\n");
      out.write("                    , $(\"#yAxis\").val()      // 자르기를 시작할 y좌표\n");
      out.write("                    , $(\"#wLength\").val()    // 잘라낸 이미지의 넓이\n");
      out.write("                    , $(\"#hLength\").val()    // 잘라낸 이미지의 높이\n");
      out.write("                    , 0                           // 캔버스에 이미지를 배치할 x좌표\n");
      out.write("                    , 0                           // 캔버스에 이미지를 배치할 y좌표\n");
      out.write("                    , $(\"#wLength\").val()    // 사용할 이미지의 넓이(이미지 스트레칭 또는 축소)\n");
      out.write("                    , $(\"#hLength\").val()    // 사용할 이미지의 높이(이미지 스트레칭 또는 축소)\n");
      out.write("                );\n");
      out.write("\t\t\t\t\n");
      out.write("                // @breif 편집한 캔버스의 이미지를 화면에 출력한다.\n");
      out.write("                let dataURI = canvas.toDataURL(\"image/jpeg\");\n");
      out.write("\t\t\t\tlet crop_id = document.getElementById(crop_img);\n");
      out.write("\t\t\t\tlet edit_id = document.getElementById(edit_img);\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tcrop_id.setAttribute(\"src\", dataURI);\n");
      out.write("\t\t\t\tcrop_id.style.width = $(\"#wLength\").val();\n");
      out.write("\t\t\t\tcrop_id.style.height = $(\"#hLength\").val();\n");
      out.write("                //jQuery(\"#editImg\"+cnt).attr(\"src\", dataURI);\n");
      out.write("\t\t\t\t\n");
      out.write("                let temp_img = document.createElement(\"img\");\n");
      out.write("                temp_img.setAttribute(\"src\", \"../../../img/black.png\");\n");
      out.write("                \n");
      out.write("                temp_img.style.position = \"absolute\";\n");
      out.write("                temp_img.style.left = $(\"#xAxis\").val() + \"px\";\n");
      out.write("                temp_img.style.top = $(\"#yAxis\").val() + \"px\";\n");
      out.write("                temp_img.style.width = $(\"#wLength\").val() + \"px\";\n");
      out.write("                temp_img.style.height = $(\"#hLength\").val() + \"px\";\n");
      out.write("                \n");
      out.write("                let temptemp = document.querySelector(\".imgArea\");\n");
      out.write("                temptemp.appendChild(temp_img);\n");
      out.write("\t\t\t\t// 원본 이미지를 모자이크 크기만큼 그리기\n");
      out.write("                canvasContext.drawImage(canvas, $(\"#xAxis\").val(), $(\"#yAxis\").val(), $(\"#wLength\").val(), $(\"#hLength\").val());\n");
      out.write("                \n");
      out.write("                $(\".imgArea\").css(\"position\", \"relative\");\n");
      out.write("\t\t\t\t\n");
      out.write("             \t// 이미지 사이즈 크기 조절 시에 대한 안티앨리어싱 끄기\n");
      out.write("                canvasContext.msImageSmoothingEnabled = false;\n");
      out.write("                canvasContext.mozImageSmoothingEnabled = false;\n");
      out.write("                canvasContext.webkitImageSmoothingEnabled = false;\n");
      out.write("                canvasContext.imageSmoothingEnabled = false;\n");
      out.write("                \n");
      out.write("                // 이미지를 원본 사이즈로 다시 그리면 모자이크 완성\n");
      out.write("                canvasContext.drawImage(canvas, $(\"#xAxis\").val(), $(\"#yAxis\").val(), $(\"#wLength\").val(), $(\"#hLength\").val(), $(\"#xAxis\").val(), $(\"#yAxis\").val(), canvas.width, canvas.height);\n");
      out.write("                \n");
      out.write("                /*var pixelate = new Pixelate(qrepImage, {\n");
      out.write("\t\t\t\t\t  amount: 0.7, // default: 0, pixelation percentage amount (range from 0 to 1)\n");
      out.write("\t\t\t\t});*/\n");
      out.write("                //crop_id.onload = drawImageActualSize; // Draw when image has loaded\n");
      out.write("\t\t\t\t\n");
      out.write("                // @breif 이미지의 크기는 자른 이미지와 동일하게 지정\n");
      out.write("                //$(\"#editImg\"+cnt).css(\"width\", $(\"#wLength\").val());\n");
      out.write("\n");
      out.write("                //$(\"#editImg\"+cnt).css(\"height\", $(\"#hLength\").val());\n");
      out.write("\t\t\t\tcnt++;\n");
      out.write("                imgCropDesignate();\n");
      out.write("            };\n");
      out.write("\n");
      out.write("            //$(\"#cutBtn\").css(\"display\", \"none\");\n");
      out.write("\n");
      out.write("            // @details JCROP을 종료한다.\n");
      out.write("            jcropApi.destroy();\n");
      out.write("\t    \tjcropApi = null;\n");
      out.write("\n");
      out.write("        }\n");
      out.write("\n");
      out.write("    }\n");
      out.write("\t\n");
      out.write("   /*  function drawImageActualSize() {\n");
      out.write("    \t  // Use the intrinsic size of image in CSS pixels for the canvas element\n");
      out.write("    \t  canvas.width = this.naturalWidth;\n");
      out.write("    \t  canvas.height = this.naturalHeight;\n");
      out.write("\n");
      out.write("    \t  // Will draw the image as 300x227, ignoring the custom size of 60x45\n");
      out.write("    \t  // given in the constructor\n");
      out.write("    \t  canvasContext.drawImage(this, $(\"#xAxis\").val(), $(\"#yAxis\").val());\n");
      out.write("\n");
      out.write("    \t  // To use the custom size we'll have to specify the scale parameters \n");
      out.write("    \t  // using the element's width and height properties - lets draw one \n");
      out.write("    \t  // on top in the corner:\n");
      out.write("    \t  canvasContext.drawImage(this, $(\"#xAxis\").val(), $(\"#yAxis\").val(), $(\"#wLength\").val(), $(\"#hLength\").val(), $(\"#xAxis\").val(), $(\"#yAxis\").val(), canvas.width, canvas.height);\n");
      out.write("\t\t\t\n");
      out.write("    \t  \n");
      out.write("    \t  \n");
      out.write("    } */\n");
      out.write("\t\n");
      out.write("\n");
      out.write("    // @breif 이미지 업로드 함수\n");
      out.write("    function uploadImgFilePrinted() {\n");
      out.write("\n");
      out.write("        // @details 업로드 파일 정보를 받아온다.\n");
      out.write("        let fileInfo = document.getElementById(\"uploadFile\").files[0];\n");
      out.write("        let reader = new FileReader();\n");
      out.write("\n");
      out.write("        reader.onload = function() {\n");
      out.write("\n");
      out.write("            // @details 업로드 이미지 출력\n");
      out.write("            $(\"#editImg\").attr(\"src\", reader.result);\n");
      out.write("\n");
      out.write("            // @details 이미지 크기를 제목 영영과 같게 출력\n");
      out.write("            //$(\"#editImg\").css(\"width\", $(\"h1\").width());\n");
      out.write("\n");
      out.write("\n");
      out.write("            // @details 이미지 업로드 기능 제거, 추가 업로드 방지\n");
      out.write("            $(\"#editImg\").parent(\"a\").removeAttr(\"onClick\");\n");
      out.write("            \n");
      out.write("            // @details 편집버튼 노출\n");
      out.write("            $(\"#editBtn\").css(\"display\", \"inline\");\n");
      out.write("\n");
      out.write("            $(\"#imgArea\").css(\"postion\", \"relative\");\n");
      out.write("            \n");
      out.write("            $(\"#editImg\").css(\"width\", \"100%\");\n");
      out.write("            $(\"#editImg\").css(\"height\", \"100%\");\n");
      out.write("            \n");
      out.write("            canvasDrawImage(function() {\n");
      out.write("\n");
      out.write("            \talert(\"이미지 업로드가 완료되었습니다.\");\n");
      out.write("            });\n");
      out.write("        };\n");
      out.write("\n");
      out.write("        if(fileInfo) {      \t\n");
      out.write("            // @details readAsDataURL을 통해 업로드한 파일의 URL을 읽어 들인다.\n");
      out.write("            reader.readAsDataURL(fileInfo);\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    // @breif 캔버스 이미지 생성\n");
      out.write("    function canvasDrawImage(callback) {\n");
      out.write("\n");
      out.write("        let prepImage = new Image();\n");
      out.write("        prepImage.src = $(\"#editImg\").attr(\"src\");\n");
      out.write("\n");
      out.write("        prepImage.onload = function() {\n");
      out.write("\n");
      out.write("            // @details 캔버스 위에 이미지 그리기\n");
      out.write("            // $(\"canvas\") 와같은 명령은 사용할 수 없다.\n");
      out.write("            let canvas = document.querySelector(\"canvas\");\n");
      out.write("            let canvasContext = canvas.getContext(\"2d\");\n");
      out.write("\n");
      out.write("            canvas.width = $(\"#editImg\").width();\n");
      out.write("            canvas.height = $(\"#editImg\").height();\n");
      out.write("            canvasContext.drawImage(this, 0, 0, $(\"#editImg\").width(), $(\"#editImg\").height());\n");
      out.write("\n");
      out.write("            // @details 캔버스의 이미지\n");
      out.write("            let dataURI = canvas.toDataURL(\"image/jpeg\");\n");
      out.write("            $(\"#editImg\").attr(\"src\", dataURI);\n");
      out.write("            \n");
      out.write("            callback();\n");
      out.write("        };\n");
      out.write("    }\n");
      out.write("    \n");
      out.write("    // 되돌리기\n");
      out.write("    function cancelCropImage() {\n");
      out.write("    \t\n");
      out.write("    \tif (cnt > 0) {\n");
      out.write("\t    \tlet cropImg = document.querySelector(\".crop_img\");\n");
      out.write("\t    \tlet shade = document.querySelector(\".imgArea\");\n");
      out.write("\t    \t\n");
      out.write("\t    \tcropImg.removeChild(cropImg.lastChild);\n");
      out.write("\t    \tshade.removeChild(shade.lastChild);\n");
      out.write("\t    \t\n");
      out.write("\t    \tcnt--;\n");
      out.write("    \t}\n");
      out.write("    \tif (cnt == 0) $(\".btn\").css(\"width\",\"50%\")\n");
      out.write("    \telse $(\".btn\").css(\"width\", \"10%\");\n");
      out.write("    \t\n");
      out.write("    }\n");
      out.write("    \n");
      out.write("    // 전체 스샷\n");
      out.write("    /* function bodyShot() { \n");
      out.write("    \thtml2canvas(document.body)\n");
      out.write("    \t//document에서 body 부분을 스크린샷을 함.\n");
      out.write("    \t.then(\n");
      out.write("    \t\t\tfunction (canvas) {\n");
      out.write("    \t\t\t\t//canvas 결과값을 drawImg 함수를 통해서\n");
      out.write("    \t\t\t\t//결과를 canvas 넘어줌.\n");
      out.write("    \t\t\t\t//png의 결과 값\n");
      out.write("    \t\t\t\tdrawImg(canvas.toDataURL('image/png'));\n");
      out.write("    \t\t\t\t\n");
      out.write("    \t\t\t\t//appendchild 부분을 주석을 풀게 되면 body\n");
      out.write("    \t\t\t\t//document.body.appendChild(canvas);\n");
      out.write("    \t\t\t\t\n");
      out.write("    \t\t\t\t//특별부록 파일 저장하기 위한 부분.\n");
      out.write("    \t\t\t\tsaveAs(canvas.toDataURL(), 'file-name.png');\n");
      out.write("    \t\t\t\t}).catch(function (err) {\n");
      out.write("    \t\t\t\t\tconsole.log(err);\n");
      out.write("    \t\t\t\t\t});\n");
      out.write("    \t} */\n");
      out.write("    \n");
      out.write("    // 부분 스샷\n");
      out.write("    function partShot() {\n");
      out.write("    \t//특정부분 스크린샷 \n");
      out.write("    \thtml2canvas(document.querySelector(\".imgArea\"))\n");
      out.write("    \t//id container 부분만 스크린샷\n");
      out.write("    \t.then(function (canvas) {\n");
      out.write("    \t\t//jpg 결과값\n");
      out.write("    \t\tdrawImg(canvas.toDataURL('image/jpeg'));\n");
      out.write("    \t\t//이미지 저장\n");
      out.write("    \t\tsaveAs(canvas.toDataURL(), 'file-name.jpg');\n");
      out.write("    \t\t}).catch(function (err) {\n");
      out.write("    \t\t\tconsole.log(err);\n");
      out.write("    \t\t\t});\n");
      out.write("    \t}\n");
      out.write("    \n");
      out.write("    function drawImg(imgData) {\n");
      out.write("    \tconsole.log(imgData);\n");
      out.write("    \t//imgData의 결과값을 console 로그롤 보실 수 있습니다.\n");
      out.write("    \treturn new Promise(function resolve() {\n");
      out.write("    \t\t//내가 결과 값을 그릴 canvas 부분 설정\n");
      out.write("    \t\tvar canvas = document.getElementById('canvas');\n");
      out.write("    \t\tvar ctx = canvas.getContext('2d');\n");
      out.write("    \t\t//canvas의 뿌려진 부분 초기화\n");
      out.write("    \t\tctx.clearRect(0, 0, canvas.width, canvas.height);\n");
      out.write("    \t\t\n");
      out.write("    \t\tvar imageObj = new Image();\n");
      out.write("    \t\timageObj.onload = function () {\n");
      out.write("    \t\t\tctx.drawImage(imageObj, 10, 10);\n");
      out.write("    \t\t\t//canvas img를 그리겠다.\n");
      out.write("    \t\t\t}; imageObj.src = imgData;\n");
      out.write("    \t\t\t//그릴 image데이터를 넣어준다.\n");
      out.write("    \t\t\t\n");
      out.write("    \t}, function reject() { });\n");
      out.write("    \t\n");
      out.write("    }\n");
      out.write("    \n");
      out.write("    function saveAs(uri, filename) {\n");
      out.write("    \tvar link = document.createElement('a');\n");
      out.write("    \tif (typeof link.download === 'string') {\n");
      out.write("    \t\tlink.href = uri;\n");
      out.write("    \t\tlink.download = filename;\n");
      out.write("    \t\tdocument.body.appendChild(link);\n");
      out.write("    \t\tlink.click();\n");
      out.write("    \t\tdocument.body.removeChild(link);\n");
      out.write("    \t\t} else {\n");
      out.write("    \t\t\twindow.open(uri);\n");
      out.write("    \t\t\t}\n");
      out.write("    \t}\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body id=\"page-top\" data-spy=\"scroll\" data-target=\".navbar-fixed-top\">\n");
      out.write("\n");
      out.write("    <!-- Navigation -->\n");
      out.write("    <nav class=\"navbar navbar-custom navbar-fixed-top\" role=\"navigation\">\n");
      out.write("        <div class=\"container\">\n");
      out.write("            <div class=\"navbar-header\">\n");
      out.write("                <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\".navbar-main-collapse\">\n");
      out.write("                    <i class=\"fa fa-bars\"></i>\n");
      out.write("                </button>\n");
      out.write("                <a class=\"navbar-brand page-scroll\" href=\"#page-top\">\n");
      out.write("                    <i class=\"fa fa-play-circle\"></i>  <span class=\"light\">Start</span> Bootstrap\n");
      out.write("                </a>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            <!-- Collect the nav links, forms, and other content for toggling -->\n");
      out.write("            <div class=\"collapse navbar-collapse navbar-right navbar-main-collapse\">\n");
      out.write("                <ul class=\"nav navbar-nav\">\n");
      out.write("                    <!-- Hidden li included to remove active class from about link when scrolled up past about section -->\n");
      out.write("                    <li class=\"hidden\">\n");
      out.write("                        <a href=\"#page-top\"></a>\n");
      out.write("                    </li>\n");
      out.write("                    <li>\n");
      out.write("                        <a class=\"page-scroll\" href=\"#about\">About</a>\n");
      out.write("                    </li>\n");
      out.write("                    <li>\n");
      out.write("                        <a class=\"page-scroll\" href=\"#download\">Download</a>\n");
      out.write("                    </li>\n");
      out.write("                    <li>\n");
      out.write("                        <a class=\"page-scroll\" href=\"#contact\">Contact</a>\n");
      out.write("                    </li>\n");
      out.write("                </ul>\n");
      out.write("            </div>\n");
      out.write("            <!-- /.navbar-collapse -->\n");
      out.write("        </div>\n");
      out.write("        <!-- /.container -->\n");
      out.write("    </nav>\n");
      out.write("\n");
      out.write("    <!-- Intro Header -->\n");
      out.write("    <header class=\"intro\">\n");
      out.write("        <div class=\"intro-body\">\n");
      out.write("            <div class=\"container\">\n");
      out.write("                <!--\n");
      out.write("                <div class=\"row\">\n");
      out.write("                    <div class=\"col-md-8 col-md-offset-2\">\n");
      out.write("                        <h1 class=\"brand-heading\">Grayscale</h1>\n");
      out.write("                        <p class=\"intro-text\">A free, responsive, one page Bootstrap theme.<br>Created by Start Bootstrap.</p>\n");
      out.write("                        <a href=\"#about\" class=\"btn btn-circle page-scroll\">\n");
      out.write("                            <i class=\"fa fa-angle-double-down animated\"></i>\n");
      out.write("                        </a>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                -->\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </header>\n");
      out.write("\n");
      out.write("    <!-- About Section -->\n");
      out.write("    <section id=\"about\" class=\"container content-section text-center\">\n");
      out.write("    <input type=\"hidden\" id=\"xAxis\" value=\"0\" placeholder=\"선택영역의_x좌표\"/>\n");
      out.write("\t<input type=\"hidden\" id=\"yAxis\" value=\"0\" placeholder=\"선택영역의_y좌표\"/>\n");
      out.write("\t<input type=\"hidden\" id=\"wLength\" value=\"0\" placeholder=\"선택영역의_w넓이\"/>\n");
      out.write("\t<input type=\"hidden\" id=\"hLength\" value=\"0\" placeholder=\"선택영역의_h높이\"/>\n");
      out.write("\t<input type=\"file\" id=\"uploadFile\" onChange=\"uploadImgFilePrinted();\" accept=\"image/*\"/>\n");
      out.write("<div class=\"contents\">\n");
      out.write("    <h1>이미지&nbsp;자르기<span>샘플</span></h1>\n");
      out.write("    <div class=\"imgArea\" style=\"float:left; width:50%;\">\n");
      out.write("        <a href=\"javascript:;\" onClick=\"$('#uploadFile').click();\">\n");
      out.write("            <img id=\"editImg\" src=\"../../img/comedy-mask-xxl.png\"/>\n");
      out.write("        </a>\n");
      out.write("        <br/>\n");
      out.write("    </div>\n");
      out.write("    <div class=\"crop_img\" style=\"float:right; width:40%;\"></div>\n");
      out.write("    <div class=\"btn\" style=\"float:right; width:50%;\" >\n");
      out.write("    \t<input id=\"editBtn\" type=\"button\" onClick=\"imgCropDesignate();\" value=\"편집\"/>\n");
      out.write("        <input id=\"cutBtn\" type=\"button\" onClick=\"imgCropApply();\" value=\"자르기\" style=\"text-align:center;\"/>\n");
      out.write("        <br/>\n");
      out.write("        <input id=\"canBtn\" type=\"button\" onClick=\"cancelCropImage();\" value=\"되돌리기\" style=\"text-align:center;\"/>\n");
      out.write("        <!-- 전체 부분\n");
      out.write("        <button onclick=bodyShot()>bodyShot</button>-->\n");
      out.write("        <!-- 일부분-->\n");
      out.write("        <button onclick=partShot();>partShot</button>\n");
      out.write("\n");
      out.write("        <!-- 결과화면을 그려줄 canvas \n");
      out.write("        <canvas id=\"canvas\" width=\"900\" height=\"600\" style=\"border:1px solid #d3d3d3;\"></canvas>-->\n");
      out.write("    </div>\n");
      out.write("    <canvas id=\"canvas\" style=\"display:none;\"></canvas>\n");
      out.write("</div>\n");
      out.write("        <div class=\"row\">\n");
      out.write("            <div class=\"col-lg-8 col-lg-offset-2\">\n");
      out.write("                \n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </section>\n");
      out.write("\n");
      out.write("    <!-- Download Section -->\n");
      out.write("    <section id=\"download\" class=\"content-section text-center\">\n");
      out.write("        <div class=\"download-section\">\n");
      out.write("            <div class=\"container\">\n");
      out.write("                <div class=\"col-lg-8 col-lg-offset-2\">\n");
      out.write("                    <h2>Download Grayscale</h2>\n");
      out.write("                    <p>You can download Grayscale for free on the preview page at Start Bootstrap.</p>\n");
      out.write("                    <a href=\"http://startbootstrap.com/template-overviews/grayscale/\" class=\"btn btn-default btn-lg\">Visit Download Page</a>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </section>\n");
      out.write("\n");
      out.write("    <!-- Contact Section -->\n");
      out.write("    <section id=\"contact\" class=\"container content-section text-center\">\n");
      out.write("        <div class=\"row\">\n");
      out.write("            <div class=\"col-lg-8 col-lg-offset-2\">\n");
      out.write("                <h2>Contact Start Bootstrap</h2>\n");
      out.write("                <p>Feel free to email us to provide some feedback on our templates, give us suggestions for new templates and themes, or to just say hello!</p>\n");
      out.write("                <p><a href=\"mailto:feedback@startbootstrap.com\">feedback@startbootstrap.com</a>\n");
      out.write("                </p>\n");
      out.write("                <ul class=\"list-inline banner-social-buttons\">\n");
      out.write("                    <li>\n");
      out.write("                        <a href=\"https://twitter.com/SBootstrap\" class=\"btn btn-default btn-lg\"><i class=\"fa fa-twitter fa-fw\"></i> <span class=\"network-name\">Twitter</span></a>\n");
      out.write("                    </li>\n");
      out.write("                    <li>\n");
      out.write("                        <a href=\"https://github.com/IronSummitMedia/startbootstrap\" class=\"btn btn-default btn-lg\"><i class=\"fa fa-github fa-fw\"></i> <span class=\"network-name\">Github</span></a>\n");
      out.write("                    </li>\n");
      out.write("                    <li>\n");
      out.write("                        <a href=\"https://plus.google.com/+Startbootstrap/posts\" class=\"btn btn-default btn-lg\"><i class=\"fa fa-google-plus fa-fw\"></i> <span class=\"network-name\">Google+</span></a>\n");
      out.write("                    </li>\n");
      out.write("                </ul>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </section>\n");
      out.write("\n");
      out.write("    <!-- Map Section -->\n");
      out.write("    <div id=\"map\"></div>\n");
      out.write("\n");
      out.write("    <!-- Footer -->\n");
      out.write("    <footer>\n");
      out.write("        <div class=\"container text-center\">\n");
      out.write("            <p>Copyright &copy; Your Website 2014</p>\n");
      out.write("        </div>\n");
      out.write("    </footer>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
